{"version":3,"sources":["components/Picture/index.tsx","components/Header/index.tsx","components/IconsDisclaimer/index.js","components/Footer/index.tsx","components/DailyPizzaMeter/index.tsx","actions/pizzaStorage.ts","reducers/pizzaStorage.ts","hooks/usePizzaStorage.ts","components/PizzaContextProvider/index.tsx","hooks/usePizzaContext.tsx","components/Calendar/ScoreModal.tsx","components/Calendar/index.tsx","components/GlobalPizzaMeter/index.tsx","components/Settings/index.tsx","components/ScoreGraphic/index.tsx","components/Series/index.tsx","components/Stats/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","components/GlobalPizzaMeter/styles.module.css","components/Calendar/styles.module.css","components/Footer/styles.module.css","components/DailyPizzaMeter/styles.module.css","components/ScoreGraphic/styles.module.css","components/Settings/styles.module.css","assets/pizza_heart.svg","components/Header/styles.module.css","components/Picture/styles.module.css","components/App/styles.module.css"],"names":["Picture","src","alt","width","height","fit","className","srcSet","style","objectFit","Array","isArray","i","length","push","cx","styles","root","join","Navbar","bg","variant","expand","Container","to","Brand","title","logo","Toggle","aria-controls","Collapse","id","Nav","exact","Link","href","Footer","padder","fixed","Row","row","Col","lg","md","sm","xs","Text","IconsDisclaimer","DailyPizzaMeter","level","max","Math","ceil","min","rootStyle","empty","full","SET_STORAGE","CLEAR_STORAGE","SET_DAY_INFO","SET_SETTINGS","INITIAL_STATE","calendar","eatenPizzasCount","settings","dailyGoal","dailyBonus","goal","reducer","state","action","type","payload","score","date","comment","STORAGE_KEY","usePizzaStorage","tuple","useReducer","localStorageItem","localStorage","getItem","JSON","parse","error","console","extractInitialState","useEffect","stringifiedNewValue","stringify","setItem","PizzaContext","React","createContext","PizzaContextProvider","children","stateDispatchTuple","Provider","value","usePizzaContext","useContext","ScoreModal","onClose","onSubmit","show","Modal","size","centered","onHide","Header","closeButton","Title","Body","Form","FormControl","hidden","readOnly","name","Group","FormLabel","as","placeholder","aria-label","aria-describedby","defaultValue","String","fill","map","_","key","Control","rows","Button","form","classNames","bind","WEEK_DAYS","isSameOrBefore","date1","date2","unit","isSame","isBefore","CalendarRows","onDayClick","startOfMonth","startOf","endOfMonth","endOf","start","end","pointer","clone","weekOfYear","week","endOfWeek","dateNum","format","isOutOfMonth","isAfter","outOfMonth","onClick","dailyPizzaMeter","add","Calendar","useState","dayjs","setDate","dispatch","showModal","setShowModal","chosenDate","setChosenDate","onCloseModal","header","set","month","year","Table","bordered","wd","event","formData","FormData","currentTarget","get","Number","undefined","setDayInfo","preventDefault","stopPropagation","PizzaAlert","percentage","alert","Alert","GlobalPizzaMeter","current","Object","values","reduce","sum","day","selectCurrentGlobalScore","cutPercentage","fullStyle","percentageStyle","textShadow","progress","Settings","Accordion","defaultActiveKey","Card","eventKey","cardHeader","setSettings","log","from","entries","Label","getDates","lastDate","scale","dates","subtract","sort","getValues","d","Triangle","_id","random","toString","slice","viewBox","refX","refY","markerUnits","markerWidth","markerHeight","orient","Graphic","data","yStep","step","points","x","y","pathD","stroke","strokeWidth","cy","r","XSerifs","every","Fragment","ZERO_Y","transform","serifText","textLength","ScoreGraphic","today","keys","abs","xmlns","preserveAspectRatio","svg","VIEW_BOX_X","markerEnd","getSeries","predicate","firstDay","series","seriesDate","currentSeries","formattedDate","calendarDate","getCurrentSeries","calendarDates","lastDay","Series","highSeries","currentHighSeries","striped","hover","Stats","basename","HomePage","SettingsPage","StatsPage","App","content","path","component","Boolean","window","location","hostname","match","locale","extend","isBetween","customParseFormat","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.162128be.chunk.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport styles from './styles.module.css';\n\ntype Props = {\n    src: string | string[],\n    alt?: string,\n    width?: string,\n    height?: string,\n    fit?: 'contain' | 'cover' | 'fill' | 'inherit' | 'initial' | 'none' | 'unset' | 'scale-down',\n    className?: string\n}\n\nconst Picture = ({src, alt, width, height, fit, className}: Props) => {\n    const srcSet = [];\n    const style = {\n        width: width || 'auto',\n        height: height || 'auto',\n        objectFit: fit || 'contain',\n    };\n\n    if (Array.isArray(src)) {\n        for (let i = 0; i < src.length; ++i) {\n            srcSet.push(`${src[i]} ${i + 1}x`);\n        }\n    } else {\n        srcSet.push(src);\n    }\n\n    return (\n        <picture className={cx(styles.root, className)} style={style}>\n            <img srcSet={srcSet.join(' ')} alt={alt || ''} />\n        </picture>\n    );\n};\n\nexport default Picture;\n","import React from 'react';\nimport {Container, Navbar, Nav} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport logo from 'assets/pizza_heart.svg';\nimport styles from './styles.module.css';\nimport Picture from 'components/Picture';\n\nexport default () => (\n    <header className={styles.root}>\n        <Navbar bg='dark' variant=\"dark\" expand='sm'>\n            <Container className=\"justify-content-between\">\n                <LinkContainer to='/'>\n                    <Navbar.Brand title=\"Can't wait no more\">\n                        <Picture src={logo} alt='logo' width={'40px'}/>\n                        {' Pizza calendar'}\n                    </Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"header-nav\"/>\n                <Navbar.Collapse id=\"header-nav\" className=\"flex-grow-0\">\n                    <Nav>\n                        <LinkContainer to='/' exact>\n                            <Nav.Link>\n                                Calendar\n                            </Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to='/stats' exact>\n                            <Nav.Link>\n                                Stats\n                            </Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to='/settings' exact>\n                            <Nav.Link>\n                                Settings\n                            </Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    </header>\n)\n","import React from 'react';\n\nexport default () => (\n    <div>\n        Some icons made by\n        {' '}\n        <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a>\n        {' '}\n        from\n        {' '}\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n    </div>\n)\n","import React from 'react';\nimport styles from './styles.module.css';\nimport {Navbar, Container, Row, Col} from 'react-bootstrap';\nimport IconsDisclaimer from 'components/IconsDisclaimer';\n\nconst Footer = () => (\n    <footer className={styles.root}>\n        <div className={styles.padder} />\n        <Navbar bg='dark' fixed='bottom' variant={'dark'}>\n            <Container>\n                <Row className={styles.row}>\n                    <Col lg='auto' md='auto' sm='auto' xs='auto'>\n                        <Navbar.Text>\n                            No copyright, for non-commercial use only\n                        </Navbar.Text>\n                    </Col>\n                    <Col lg md sm xs />\n                    <Col lg='auto' md='auto' sm='auto' xs='auto'>\n                        <Navbar.Text>\n                            <IconsDisclaimer/>\n                        </Navbar.Text>\n                    </Col>\n                </Row>\n            </Container>\n        </Navbar>\n    </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport styles from './styles.module.css';\n\nconst DailyPizzaMeter = ({level, max, width, height}: {level: number, max: number, width?: number, height?: number}) => {\n    const style = {\n        height: Math.ceil(Math.min(level, max) / max * 100) + '%',\n    };\n\n    const rootStyle = {\n        width: width || '100%',\n        height: height || '100%',\n    };\n\n    return (\n        <span className={styles.root} style={rootStyle}>\n            <span className={styles.empty} />\n            <span className={styles.full} style={style}/>\n        </span>\n    )\n};\n\nexport default DailyPizzaMeter;\n","import {ActionCreator, EmptyActionCreator, ReturnType} from 'utils/types';\nimport {PizzaState} from 'reducers/pizzaStorage';\n\nexport const SET_STORAGE = 'pizzaCalendar/setStorage';\nexport const CLEAR_STORAGE = 'pizzaCalendar/clearStorage';\nexport const SET_DAY_INFO = 'pizzaCalendar/setDailyScore';\nexport const SET_SETTINGS = 'pizzaCalendar/setSettings';\n\nexport const setStorage: ActionCreator<typeof SET_STORAGE, {state: PizzaState}> = ({state}) => ({\n    type: SET_STORAGE, payload: {state}\n});\nexport const clearStorage: EmptyActionCreator<typeof CLEAR_STORAGE> = () => ({type: CLEAR_STORAGE});\nexport const setDayInfo: ActionCreator<\n    typeof SET_DAY_INFO,\n    {score: number, date: string, comment?: string}\n> = ({score, date, comment}) => ({\n    type: SET_DAY_INFO,\n    payload: {score, date, comment},\n});\nexport const setSettings: ActionCreator<typeof SET_SETTINGS, {dailyGoal: number, dailyBonus:number, goal: number}> = ({\n    dailyGoal,\n    dailyBonus,\n    goal\n}) => ({\n    type: SET_SETTINGS,\n    payload: {\n        dailyGoal,\n        dailyBonus,\n        goal\n    },\n});\n\nexport type Actions =\n    | ReturnType<typeof setStorage>\n    | ReturnType<typeof clearStorage>\n    | ReturnType<typeof setDayInfo>\n    | ReturnType<typeof setSettings>;\n\n","import {Actions, CLEAR_STORAGE, SET_DAY_INFO, SET_SETTINGS, SET_STORAGE} from 'actions/pizzaStorage';\n\nexport type PizzaState = {\n    calendar: {[key in string]: {\n        score: number,\n        comment?: string,\n    }},\n    eatenPizzasCount: number,\n    settings: {\n        dailyGoal: number,\n        dailyBonus: number,\n        goal: number\n    }\n}\n\nexport const INITIAL_STATE: PizzaState = {\n    calendar: {},\n    eatenPizzasCount: 0,\n    settings: {\n        dailyGoal: 6,\n        dailyBonus: 0,\n        goal: 160,\n    }\n};\n\nexport function reducer(state: PizzaState, action: Actions): PizzaState {\n    switch(action.type) {\n        case SET_DAY_INFO:\n            const {score, date, comment} = action.payload;\n\n            return {\n                ...state,\n                calendar: {\n                    ...state.calendar,\n                    [date]: {\n                        score,\n                        comment,\n                    },\n                },\n            };\n        case SET_SETTINGS:\n            return {\n                ...state,\n                settings: action.payload,\n            };\n        case SET_STORAGE:\n            return action.payload.state;\n        case CLEAR_STORAGE:\n            return INITIAL_STATE;\n        default:\n            return state;\n    }\n}\n\n","import {useEffect, useReducer} from 'react';\nimport {INITIAL_STATE, PizzaState, reducer} from 'reducers/pizzaStorage';\nimport {Actions} from 'actions/pizzaStorage';\n\nconst STORAGE_KEY = '__PIZZA_STORAGE_KEY__';\n\nfunction extractInitialState() {\n    const localStorageItem = localStorage.getItem(STORAGE_KEY);\n\n    try {\n        return localStorageItem ? JSON.parse(localStorageItem) : INITIAL_STATE;\n    } catch (error) {\n        console.error('Can not parse localStorage', localStorageItem, error);\n\n        return INITIAL_STATE;\n    }\n}\n\n/**\n * Добавляет компоненту редюсер, dispatch и дампинг в localStorage\n */\nfunction usePizzaStorage(): [PizzaState, (action: Actions) => void] {\n    const tuple = useReducer(reducer, extractInitialState());\n    const [state] = tuple;\n\n    useEffect(() => {\n        const stringifiedNewValue = JSON.stringify(state);\n\n        localStorage.setItem(STORAGE_KEY, stringifiedNewValue);\n    }, [state]);\n\n    return tuple;\n}\n\nexport default usePizzaStorage;\n","import React from 'react';\nimport usePizzaStorage from 'hooks/usePizzaStorage';\nimport {ReturnType} from 'utils/types';\n\ntype ContextType = ReturnType<typeof usePizzaStorage>\nexport const PizzaContext = React.createContext(([{}, (() => null)] as any as ContextType));\n\nconst PizzaContextProvider = ({children}: { children: React.ReactNode }) => {\n    const stateDispatchTuple = usePizzaStorage();\n\n    return (\n        <PizzaContext.Provider value={stateDispatchTuple}>\n            {children}\n        </PizzaContext.Provider>\n    );\n};\n\nexport default PizzaContextProvider;\n","import {useContext} from 'react';\nimport {PizzaContext} from 'components/PizzaContextProvider';\n\nexport const usePizzaContext = () => useContext(PizzaContext);\n","import React, {FormEvent} from 'react';\nimport {Button, Form, FormControl, FormLabel, Modal} from 'react-bootstrap';\nimport {usePizzaContext} from 'hooks/usePizzaContext';\n\ntype Props = {\n    onClose: () => void,\n    onSubmit: (event: FormEvent<HTMLFormElement>) => void,\n    date: string,\n    show: boolean\n};\n\nconst ScoreModal = ({\n    onClose,\n    onSubmit,\n    date,\n    show\n}: Props) => {\n    const [state] = usePizzaContext();\n    const {settings, calendar} = state;\n    const {dailyGoal, dailyBonus} = settings;\n    const {score = 0, comment = ''} = calendar[date] || {};\n\n    return (\n        <Modal\n            size='sm'\n            centered={true}\n            show={show}\n            onHide={onClose}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    Set your score!\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form id='dailyScoreSet' onSubmit={onSubmit}>\n                    <FormControl value={date} hidden={true} readOnly name='date'/>\n                    <Form.Group>\n                        <FormLabel>\n                            Score\n                        </FormLabel>\n                        <FormControl\n                            name='score'\n                            as='select'\n                            placeholder=\"Remember: nobody likes cheaters\"\n                            aria-label=\"Remember: nobody likes cheaters\"\n                            aria-describedby=\"daily-score\"\n                            defaultValue={String(score || 0)}\n                        >\n                            {(new Array(dailyGoal + dailyBonus + 1)).fill(null).map((_, i) => (\n                                <option key={i}>{i}</option>\n                            ))}\n                        </FormControl>\n                    </Form.Group>\n                    <Form.Group>\n                        <FormLabel>\n                            Comment\n                        </FormLabel>\n                        <Form.Control as=\"textarea\" rows=\"3\" name='comment' defaultValue={comment} />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"primary\" type='submit' form='dailyScoreSet'>\n                    Save Changes\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default ScoreModal;\n","import React, {FormEvent, useState} from 'react';\nimport {Button, Table} from 'react-bootstrap';\nimport dayjs, {Dayjs, UnitType} from 'dayjs';\nimport classNames from 'classnames/bind';\n\nimport DailyPizzaMeter from 'components/DailyPizzaMeter';\nimport ScoreModal from './ScoreModal';\nimport styles from './styles.module.css';\nimport {usePizzaContext} from 'hooks/usePizzaContext';\nimport {setDayInfo} from 'actions/pizzaStorage';\n\nconst cx = classNames.bind(styles);\nconst WEEK_DAYS = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];\n\nconst isSameOrBefore = (date1: Dayjs, date2: Dayjs, unit: UnitType) => {\n    return date1.isSame(date2, unit) || date1.isBefore(date2, unit);\n};\n\nconst CalendarRows = ({date, onDayClick}: {onDayClick: (day: string) => void, date: Dayjs}) => {\n    const startOfMonth = date.startOf('month');\n    const endOfMonth = date.endOf('month');\n    const start = startOfMonth.startOf('week');\n    const end = endOfMonth.endOf('week');\n\n    const [state] = usePizzaContext();\n    const rows = [];\n    let pointer = start.clone();\n\n    while (isSameOrBefore(pointer, end, 'day')) {\n        const weekOfYear = pointer.week();\n        const endOfWeek = pointer.endOf('week');\n        const row = [];\n\n        do {\n            const dateNum = pointer.format('DD');\n            const date = pointer.format('YYYY-MM-DD');\n            const isOutOfMonth = pointer.isBefore(startOfMonth, 'day') || pointer.isAfter(endOfMonth, 'day');\n            const className = cx({\n                date: true,\n                outOfMonth: isOutOfMonth\n            });\n            const level = state.calendar[date] ? state.calendar[date].score : 0;\n            const max = state.settings.dailyGoal;\n\n            row.push((\n                <td className={className} key={dateNum} onClick={() => onDayClick(date)}>\n                    <div className={styles.dailyPizzaMeter}>\n                        <DailyPizzaMeter level={level} max={max}/>\n                    </div>\n                    {dateNum}\n                </td>\n            ));\n            pointer = pointer.add(1, 'day');\n        } while (isSameOrBefore(pointer, endOfWeek, 'day'));\n\n        rows.push((\n            <tr key={weekOfYear}>\n                <td className={styles.weekOfYear}>{weekOfYear}</td>\n                {row}\n            </tr>\n        ));\n    }\n\n    return (\n        <>\n            {rows.map(row => row)}\n        </>\n    );\n};\n\nconst Calendar = () => {\n    const [date, setDate] = useState(dayjs());\n    const nextMonth = () => setDate(date.set('month', date.month() + 1));\n    const prevMonth = () => setDate(date.set('month', date.month() - 1));\n\n    const [, dispatch] = usePizzaContext();\n    const [showModal, setShowModal] = useState(false);\n    const [chosenDate, setChosenDate] = useState<null | string>(null);\n\n    const onShowModal = (date: string) => {\n        setShowModal(true);\n        setChosenDate(date)\n    };\n    const onCloseModal = () => setShowModal(false);\n    const onSubmitModal = (event: FormEvent<HTMLFormElement>) => {\n        const formData = new FormData(event.currentTarget);\n        const date = formData.get('date') as string;\n        const score = Number(formData.get('score'));\n        const comment = String(formData.get('comment')) || undefined;\n        dispatch(setDayInfo({date, score, comment}));\n        onCloseModal();\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    return (\n        <div className={styles.root}>\n            <div className={styles.header}>\n                <Button variant=\"light\" onClick={prevMonth}>{'\\u25c4'}</Button>\n                <h3>\n                    {date.year() === dayjs().year() ? date.format('MMMM') : date.format('MMMM YYYY')}\n                </h3>\n                <Button variant=\"light\" onClick={nextMonth}>{'\\u25ba'}</Button>\n            </div>\n            <Table bordered>\n                <thead>\n                    <tr>\n                        <td>#</td>\n                        {WEEK_DAYS.map(wd => <td key={wd}>{wd}</td>)}\n                    </tr>\n                </thead>\n                <tbody>\n                    <CalendarRows onDayClick={onShowModal} date={date}/>\n                </tbody>\n            </Table>\n            <ScoreModal\n                date = {chosenDate as string}\n                show={showModal}\n                onClose={onCloseModal}\n                onSubmit={onSubmitModal}\n            />\n        </div>\n    )\n};\n\nexport default Calendar;\n","import React from 'react';\nimport {Alert} from 'react-bootstrap';\nimport styles from './styles.module.css';\nimport {usePizzaContext} from 'hooks/usePizzaContext';\nimport {PizzaState} from 'reducers/pizzaStorage';\n\nconst selectCurrentGlobalScore = (state: PizzaState): number => {\n    const {calendar, eatenPizzasCount, settings} = state;\n\n    const totalScore = Object\n        .values(calendar)\n        .reduce((sum, day) => sum + (day.score || 0), 0);\n\n    return totalScore - settings.goal * eatenPizzasCount;\n};\n\nconst PizzaAlert = ({percentage}: {percentage: number}) => {\n    if (percentage < 0) {\n        return (\n            <div className={styles.alert}>\n                <Alert variant='danger'>You owe pizza bank!</Alert>\n            </div>\n        );\n    } else if (percentage >= 100) {\n        return (\n            <div className={styles.alert}>\n                <Alert variant='success'>Hoooray! You deserve pizza!</Alert>\n            </div>\n        );\n    }\n\n    return null;\n};\n\nconst GlobalPizzaMeter = () => {\n    const [state] = usePizzaContext();\n    const current = selectCurrentGlobalScore(state);\n    const goal = state.settings.goal;\n    const percentage = Math.ceil(current / goal * 100);\n    const cutPercentage = current < 0 ? 0 :\n        current >= goal ? 100 : percentage;\n\n    const fullStyle = {\n        width: `${cutPercentage}%`,\n    };\n\n    const percentageStyle = {\n        textShadow: `rgba(${(1 - cutPercentage / 100) * 255}, ${cutPercentage / 100 * 255}, 0) 0 0 4px`,\n    };\n\n    return (\n        <div className={styles.root}>\n            <div className={styles.progress}>\n                <div className={styles.empty}/>\n                <div className={styles.full} style={fullStyle} />\n            </div>\n            <div className={styles.percentage} style={percentageStyle}>\n                {`${percentage} %`}\n            </div>\n            <PizzaAlert percentage={percentage} />\n        </div>\n    )\n};\n\nexport default GlobalPizzaMeter;\n","import React, {FormEvent} from 'react';\nimport {Button, Accordion, Card, Container, Form} from 'react-bootstrap';\nimport {usePizzaContext} from 'hooks/usePizzaContext';\nimport {clearStorage, setSettings} from 'actions/pizzaStorage';\nimport styles from './styles.module.css'\n\nconst Settings = () => {\n    const [state, dispatch] = usePizzaContext();\n    const {settings} = state;\n\n    const onPreferencesSubmit = (event: FormEvent<HTMLFormElement>) => {\n        const formData = new FormData(event.currentTarget);\n        const goal = Number(formData.get('goal'));\n        const dailyGoal = Number(formData.get('dailyGoal'));\n        const dailyBonus = Number(formData.get('dailyBonus'));\n\n        if (!goal || !dailyGoal || !dailyBonus || goal <= 0 || dailyGoal <= 0 || dailyBonus < 0) {\n            alert('Bad preferences')\n        } else {\n            dispatch(setSettings({goal, dailyGoal, dailyBonus}));\n        }\n        console.log(Array.from(formData.entries()));\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    return (\n        <Container className=\"flex-grow-1\">\n            <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\" className={styles.cardHeader}>\n                        Preferences\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body>\n                            <Form onSubmit={onPreferencesSubmit}>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Daily goal\n                                    </Form.Label>\n                                    <Form.Control as='input' name='dailyGoal' type=\"number\"\n                                                  defaultValue={settings.dailyGoal}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Daily bonus points\n                                    </Form.Label>\n                                    <Form.Control as='input' name='dailyBonus' type=\"number\"\n                                                  defaultValue={settings.dailyBonus}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Pizza Goal\n                                    </Form.Label>\n                                    <Form.Control as='input' name='goal' type=\"number\" defaultValue={settings.goal} />\n                                </Form.Group>\n                                <Button type='submit' variant='primary'>Save Preferences</Button>\n                            </Form>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\"  className={styles.cardHeader}>\n                        Store\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body>\n                            <pre>{JSON.stringify(state, null, 2)}</pre>\n                            <Button onClick={() => dispatch(clearStorage())} variant='danger'>Очистить всё!</Button>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </Container>\n    );\n};\n\nexport default Settings;\n","import dayjs, {Dayjs} from 'dayjs';\nimport React, {useState} from 'react';\nimport {usePizzaContext} from 'hooks/usePizzaContext';\nimport styles from './styles.module.css';\n\nconst VIEW_BOX_X = 300\nconst DEFAULT_SCALE = 30;\nconst FORMAT = 'YYYY-MM-DD';\nconst ZERO_X = 5;\nconst ZERO_Y = 90;\nconst MAX_Y = 5;\nconst MAX_POINT_Y = 10;\nconst MAX_X = VIEW_BOX_X - 5;\nconst LIGHT_STROKE = 0.05;\n\nconst ScoreGraphic = () => {\n    const [{calendar, settings}] = usePizzaContext();\n    const {dailyGoal} = settings;\n\n\n    const today = dayjs();\n\n    const [lastDate, setLastDate] = useState(today);\n    const [scale, setScale] = useState(DEFAULT_SCALE);\n    const availableDates = Object.keys(calendar);\n    const dates = getDates(lastDate, scale);\n    const values = getValues(calendar, dates);\n    const yStep = Math.abs((MAX_POINT_Y - ZERO_Y) / dailyGoal);\n\n    return (\n        <div className={styles.root}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${VIEW_BOX_X} 100`} preserveAspectRatio=\"none\" className={styles.svg}>\n                <Triangle id='_' />\n                <rect width=\"100%\" height=\"100%\" x=\"0\" y=\"0\" fill=\"none\" strokeWidth={LIGHT_STROKE} stroke=\"#0f0\"/>\n                <path d={`M 0 ${ZERO_Y} H ${MAX_X} `} stroke=\"#000\" strokeWidth={LIGHT_STROKE} markerEnd={'url(#triangle__)'}/>\n                <path d={`M ${ZERO_X} 100 V ${MAX_Y} `} stroke=\"#000\" strokeWidth={LIGHT_STROKE} markerEnd={'url(#triangle__)'}/>\n                <Graphic data={values} yStep={yStep} />\n\n                <XSerifs data={dates} />\n            </svg>\n        </div>\n    );\n};\n\nconst getDates = (lastDate: Dayjs, scale: number) => {\n    const dates = [];\n    let day = lastDate;\n\n    for (let i = scale; i >=0; --i) {\n        dates.push(day.format(FORMAT));\n        day = day.subtract(1, 'day');\n    }\n\n    return dates.sort();\n};\nconst getValues = (calendar: {[key in string]: {score: number}}, dates: string[]) => {\n    return dates.map(d => calendar[d] ? (calendar[d].score || 0) : 0);\n};\n\nconst Triangle = ({id}: {id?: string}) => {\n    const _id = id || Math.random().toString(16).slice(2);\n\n    return (\n        <defs>\n            <marker id={`triangle_${_id}`} viewBox=\"0 0 10 10\"\n                    refX=\"1\" refY=\"5\"\n                    markerUnits=\"strokeWidth\"\n                    markerWidth=\"10\" markerHeight=\"10\"\n                    orient=\"auto\">\n                <path d=\"M 0 0 L 10 5 L 0 10 z\" fill=\"#000\"/>\n            </marker>\n        </defs>\n    );\n};\n\nconst Graphic = ({data, yStep}: {data: number[], yStep: number}) => {\n    const step = (MAX_X - ZERO_X) / data.length;\n    const points = data.map((d, i) => ({x: ZERO_X + i * step, y: ZERO_Y - yStep * d}));\n    const pathD = 'M ' + points.map(({x, y}) => `${x} ${y}`).join(' L ');\n\n    return (\n        <>\n            <path d={pathD} stroke=\"#0f0\" strokeWidth={0.25} fill=\"none\" />\n            {points.map(({x, y}) => <circle cx={x} cy={y} r={0.5} fill={\"#00f\"} key={`point_${x}_${y}`}/>)}\n        </>\n    );\n};\n\nconst XSerifs = ({data, every = 3}: {data: string[], every?: number}) => {\n    const step = (MAX_X - ZERO_X) / data.length;\n    const low = ZERO_Y - .5;\n\n    return (\n        <React.Fragment>\n            {data.map((d, i) => {\n                if (i % every) {\n                    return null\n                }\n\n                return (\n                    <React.Fragment key={`serif_x_${i}`}>\n                        <path d={`M ${ZERO_X + i * step} ${low} v1`} stroke=\"#000\" strokeWidth={LIGHT_STROKE} />\n                        <g transform='translate(-.5, 2)' >\n                            <text x={`${ZERO_X + i * step}`}\n                                  y={low}\n                                  className={styles.serifText}\n                                  transform={`rotate(45, ${ZERO_X + i * step}, ${low})`}\n                                  textLength={d.length - 2}\n                            >{d}</text>\n                        </g>\n                    </React.Fragment>\n                )\n            })}\n        </React.Fragment>\n    )\n};\n\nexport default ScoreGraphic;\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport {usePizzaContext} from 'hooks/usePizzaContext';\nimport {Table} from 'react-bootstrap';\n\nconst Series = () => {\n    const [{calendar, settings}] = usePizzaContext();\n    const series = getSeries(score => score > 0)(calendar, settings.dailyGoal);\n    const highSeries = getSeries((score, dailyGoal) => score > 0 && score === dailyGoal)(calendar, settings.dailyGoal);\n    const currentSeries = getCurrentSeries(score => score > 0)(calendar, settings.dailyGoal);\n    const currentHighSeries = getCurrentSeries((score, dailyGoal) => score > 0 && score === dailyGoal)(calendar, settings.dailyGoal);\n\n    return (\n        <Table bordered striped hover size='sm'>\n            <tbody>\n                <tr>\n                    <td>Longest High Series</td><td>{highSeries.value}</td>\n                    <td>finished at:</td><td>{highSeries.date}</td>\n                </tr>\n                <tr>\n                    <td>Longest Series:</td><td>{series.value}</td>\n                    <td>finished at:</td><td>{series.date}</td>\n                </tr>\n                <tr>\n                    <td>Current High Series:</td><td>{currentHighSeries.value}</td>\n                    <td>started at:</td><td>{currentHighSeries.date}</td>\n                </tr>\n                <tr>\n                    <td>Current Series:</td><td>{currentSeries.value}</td>\n                    <td>started at:</td><td>{currentSeries.date}</td>\n                </tr>\n            </tbody>\n        </Table>\n    );\n};\n\nconst getSeries = (predicate: (score: number, dailyGoal: number) => boolean) =>\n    (calendar: { [key in string]: { score: number } }, dailyGoal: number) =>\n    {\n        const calendarDates = Object.keys(calendar).sort();\n        const firstDay = calendarDates[0];\n        const today = dayjs();\n\n        let date = dayjs(firstDay, 'YYYY-MM-DD');\n        let series = 0;\n        let seriesDate = 'none';\n        let currentSeries = 0;\n\n        while (date.isBefore(today, 'day') || date.isSame(today, 'day')) {\n            const formattedDate = date.format('YYYY-MM-DD');\n            const calendarDate = calendar[formattedDate];\n            const score = Number(calendarDate && calendarDate.score) || 0;\n\n            if (predicate(score, dailyGoal)) {\n                currentSeries++;\n                if (currentSeries > series) {\n                    series = currentSeries;\n                    seriesDate = formattedDate;\n                }\n            }\n\n            if (!score) {\n                currentSeries = 0;\n            }\n\n            date = date.add(1, 'day');\n        }\n\n        return {value: series, date: seriesDate};\n    };\n\nconst getCurrentSeries = (predicate: (score: number, dailyGoal: number) => boolean) =>\n    (calendar: { [key in string]: { score: number } }, dailyGoal: number) =>\n    {\n        const calendarDates = Object.keys(calendar).sort();\n        const lastDay = calendarDates[calendarDates.length - 1];\n        const firstDay = calendarDates[0];\n\n        let date = dayjs(lastDay, 'YYYY-MM-DD');\n        let seriesDate = 'newer';\n        let currentSeries = 0;\n\n        if (!lastDay) {\n            return {value: 0, date: seriesDate};\n        }\n\n        while (\n            date.isAfter(firstDay, 'day')\n            || date.isSame(firstDay, 'day')\n            ) {\n            const formattedDate = date.format('YYYY-MM-DD');\n            const calendarDate = calendar[formattedDate];\n            const score = Number(calendarDate && calendarDate.score) || 0;\n\n            if (predicate(score, dailyGoal)) {\n                currentSeries++;\n                seriesDate = formattedDate;\n            }\n\n            if (!score) {\n                break;\n            }\n\n            date = date.subtract(1, 'day');\n        }\n\n        return {\n            value: currentSeries,\n            date: seriesDate,\n        }\n    };\n\nexport default Series;\n","import React from 'react';\nimport ScoreGraphic from 'components/ScoreGraphic';\nimport Series from 'components/Series';\n\nconst Stats = () => {\n    return (\n        <>\n            <ScoreGraphic/>\n            <Series/>\n        </>\n    );\n};\n\n\n\nexport default Stats;\n","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport Calendar from 'components/Calendar';\nimport GlobalPizzaMeter from 'components/GlobalPizzaMeter';\nimport PizzaContextProvider from 'components/PizzaContextProvider';\nimport Settings from 'components/Settings';\nimport Stats from 'components/Stats';\nimport styles from './styles.module.css';\n\nlet basename = '/';\n\nif (process.env.NODE_ENV === 'production') {\n    basename = '/pizza-calendar/';\n}\n\nconst App: React.FC = () => {\n    return (\n        <Router basename={basename}>\n            <div className=\"App\">\n                <PizzaContextProvider>\n                    <Header/>\n\n                    <Container className={styles.content}>\n                        <Switch>\n                            <Route path={'/'} component={HomePage} exact />\n                            <Route path={'/stats'} component={StatsPage} exact />\n                            <Route path={'/settings'} component={SettingsPage} exact />\n                        </Switch>\n                    </Container>\n\n                    <Footer/>\n                </PizzaContextProvider>\n            </div>\n        </Router>\n    );\n};\n\nconst HomePage = () => (\n    <>\n        <Row className='justify-content-center'>\n            <Col lg='auto' md='auto' sm='auto' xs='auto'>\n                <GlobalPizzaMeter/>\n            </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n            <Col>\n                <Calendar/>\n            </Col>\n        </Row>\n    </>\n);\n\nconst SettingsPage = () => (\n    <>\n        <Row className='justify-content-center'>\n            <Col>\n                <Settings />\n            </Col>\n        </Row>\n    </>\n);\n\nconst StatsPage = () => (\n    <>\n\n        <Row className='justify-content-center'>\n            <Col>\n                <Stats/>\n            </Col>\n        </Row>\n    </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'dayjs/locale/ru';\nimport dayjs from 'dayjs';\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\n\n\ndayjs.locale('ru');\ndayjs.extend(weekOfYear);\ndayjs.extend(isBetween);\ndayjs.extend(customParseFormat);\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2yGfR\",\"progress\":\"styles_progress__3nT8N\",\"empty\":\"styles_empty__3Jv49\",\"full\":\"styles_full__3NRnI\",\"percentage\":\"styles_percentage__F-DJG\",\"alert\":\"styles_alert__2S3Kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2ZEkx\",\"header\":\"styles_header__M9knd\",\"date\":\"styles_date__wwbG8\",\"dailyPizzaMeter\":\"styles_dailyPizzaMeter__3DtwB\",\"outOfMonth\":\"styles_outOfMonth__3xhaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"styles_row__2xCRJ\",\"padder\":\"styles_padder__3E2eA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1yk8g\",\"empty\":\"styles_empty__1z1lv\",\"full\":\"styles_full__2gSHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"styles_svg__3Z78Q\",\"serifText\":\"styles_serifText__1AWIk\",\"root\":\"styles_root__2T_Hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardHeader\":\"styles_cardHeader__1FpO-\"};","module.exports = __webpack_public_path__ + \"static/media/pizza_heart.c4a46534.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2e9Hh\",\"row\":\"styles_row__uIRiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__3jXdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__ASPDC\",\"justifyCenter\":\"styles_justifyCenter__cD8Wi\",\"content\":\"styles_content__1Ykho\"};"],"sourceRoot":""}